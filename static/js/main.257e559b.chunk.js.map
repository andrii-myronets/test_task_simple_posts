{"version":3,"sources":["commons/Footer/index.js","commons/Header/index.js","store/modal/types.js","store/modal/selectors.js","components/Modal/index.js","store/modal/actions.js","API/index.js","store/post/types.js","store/postsList/selectors.js","store/post/selectors.js","components/Post/PostForm.js","store/post/operation.js","store/post/actions.js","components/Post/index.js","components/PostsList/index.js","store/postsList/types.js","App.js","store/postsList/operation.js","store/postsList/actions.js","reportWebVitals.js","store/modal/reducer.js","store/postsList/reducer.js","store/post/reducer.js","store/index.js","index.js"],"names":["Footer","StyledFooter","styled","footer","Header","StyledHeader","header","OPEN_MODAL","CLOSE_MODAL","MODULE_NAME","selectModalIsOpen","state","isOpenModal","selectModalContent","content","Modal","useLockBodyScroll","dispatch","useDispatch","useSelector","closeModalHandler","type","ReactDOM","createPortal","ModalOwerlay","onClick","e","currentTarget","target","ModalWindow","CloseBtn","height","viewBox","width","xmlns","d","document","getElementById","div","server","Axios","create","baseURL","SET_POST_IMG","SET_POST_COMMENTS","ADD_POST_COMMENT","selectPostsList","posts","selectPost","PostForm","image_id","useState","nameValue","setNameValue","commentsValue","setCommentsValue","handleSubmit","event","comment","preventDefault","name","description","a","post","status","data","payload","console","log","StyledForm","onSubmit","StyledInput","value","onChange","placeholder","required","StyledButton","form","input","Post","postInfo","Container","StyledImg","src","imgSrc","alt","Comments","comments","length","map","item","index","Comment","CommentName","CommentDescription","img","p","PostsList","list","handler","then","getPostComments","SET_POSTS","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","InitialState","rootReducer","combineReducers","modalModuleName","postsListModuleName","postModuleName","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","StrictMode"],"mappings":"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","file":"static/js/main.257e559b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const Footer = () => {\n    return(\n        <StyledFooter>&copy; 2018-2019</StyledFooter>\n    )\n}\n\nconst StyledFooter = styled.footer`\n    text-align: center;\n    color: #CCCCCC;\n    border-top: 1px solid #CCCCCC;\n    padding: 1rem;\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Header = () => {\n    return(\n        <StyledHeader>test app</StyledHeader>\n    )\n}\n\nconst StyledHeader = styled.header`\n    text-align: center;\n    text-transform: uppercase;\n    font-size: 36px;\n    padding: 1rem;    \n`","export const OPEN_MODAL = 'OPEN_MODAL'\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL'\r\n","export const MODULE_NAME = 'modal'\r\n\r\nexport const selectModalIsOpen = state => state[MODULE_NAME].isOpenModal\r\nexport const selectModalContent = state => state[MODULE_NAME].content\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLockBodyScroll } from 'react-use';\nimport styled from 'styled-components';\n\nimport { closeModal } from '../../store/modal/actions.js';\nimport { selectModalContent } from '../../store/modal/selectors.js';\n\n\nexport const Modal = () => {\n  useLockBodyScroll();\n  const dispatch = useDispatch();\n  const content = useSelector(selectModalContent);\n\n  const closeModalHandler = () => {\n    dispatch(closeModal())\n  };\n\n  return ReactDOM.createPortal(\n    <ModalOwerlay onClick={(e) => e.currentTarget === e.target ? closeModalHandler() : null}>\n      <ModalWindow>\n        <CloseBtn onClick={() => closeModalHandler()}>\n          <svg height='100%' viewBox='0 0 311 311.07733' width='100%' xmlns='http://www.w3.org/2000/svg'>\n            <path d='m16.035156 311.078125c-4.097656 0-8.195312-1.558594-11.308594-4.695313-6.25-6.25-6.25-16.382812 0-22.632812l279.0625-279.0625c6.25-6.25 16.382813-6.25 22.632813 0s6.25 16.382812 0 22.636719l-279.058594 279.058593c-3.136719 3.117188-7.234375 4.695313-11.328125 4.695313zm0 0' /><path d='m295.117188 311.078125c-4.097657 0-8.191407-1.558594-11.308594-4.695313l-279.082032-279.058593c-6.25-6.253907-6.25-16.386719 0-22.636719s16.382813-6.25 22.636719 0l279.058594 279.0625c6.25 6.25 6.25 16.382812 0 22.632812-3.136719 3.117188-7.230469 4.695313-11.304687 4.695313zm0 0' />\n          </svg>\n        </CloseBtn>\n        {content}\n      </ModalWindow>\n    </ModalOwerlay>,\n    document.getElementById('modal-root')\n  )\n};\n\nconst ModalOwerlay = styled.div`\n  position: fixed;\n  background-color: #312e2e83;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\nconst ModalWindow = styled.div`\nposition: relative; \nbackground-color: #ffffff;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between;  \nmax-height: 100vh;\noverflow: auto;\nmin-width:100%;\nmin-height:100%;\n@media (min-width: 481px){\n  min-width:30%;\n  min-height:30%;  \n  max-width:70%;\n  }\n`\nconst CloseBtn = styled.div`\nposition: absolute;\ntop: 15px;\nright: 15px;\nwidth: 1.5rem;\nheight: 1.5rem;\nfill: #A0A9AF;\n  &:hover{\n    fill: #c91212;\n    cursor: pointer;\n  }\n`;","import { CLOSE_MODAL, OPEN_MODAL } from './types'\r\n\r\nexport const openModal = (payload) => ({\r\n  type: OPEN_MODAL,\r\n  payload\r\n})\r\n\r\nexport const closeModal = () => ({\r\n  type: CLOSE_MODAL\r\n})\r\n","import Axios from 'axios';\n\nexport const BASE_URL = 'https://tzfrontend.herokuapp.com';\n\nexport const server = Axios.create({\n  baseURL: BASE_URL\n});","export const SET_POST_IMG = 'SET_POST_IMG';\nexport const SET_POST_COMMENTS = 'SET_POST_COMMENTS';\nexport const ADD_POST_COMMENT = 'ADD_POST_COMMENT';\n","export const MODULE_NAME = 'postsList';\n\nexport const selectPostsList = state => state[MODULE_NAME].posts","export const MODULE_NAME = 'post';\n\nexport const selectPost = state => state[MODULE_NAME]","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { addComment } from '../../store/post/operation';\n\nexport const PostForm = ({ image_id }) => {\n    const [nameValue, setNameValue] = useState('');\n    const [commentsValue, setCommentsValue] = useState('');\n\n    const dispatch = useDispatch();\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        dispatch(addComment(\n            {\n                name: nameValue,\n                description: commentsValue,\n                image_id: image_id\n            }\n        ));\n        setNameValue('');\n        setCommentsValue('');\n    }\n\n\n    return (\n        <StyledForm onSubmit={(event) => handleSubmit(event)}>\n            <label>\n                <StyledInput\n                    type=\"text\"\n                    value={nameValue}\n                    onChange={(event) => setNameValue(event.target.value)}\n                    placeholder='Ваше имя'\n                    required={true}\n                />\n            </label>\n            <label>\n                <StyledInput\n                    type=\"text\"\n                    value={commentsValue}\n                    onChange={(event) => setCommentsValue(event.target.value)}\n                    placeholder='Ваш комментарий'\n                    required={true}\n                />\n            </label>\n            <StyledButton type=\"submit\" value=\"Оставить комментарий\" />\n        </StyledForm>\n    )\n}\n\nconst StyledForm = styled.form`\n  padding: 20px;\n  grid-area: form;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 481px){  \n    padding: 0;\n  }  \n`\nconst StyledInput = styled.input`\n   width:100%;\n   border: 1px solid #cccccc; //цвет рамки\n   border-radius: 3px; //закругление углов (общее)   \n   outline: none; // удаляет обводку в браузерах хром(желтая) и сафари(синяя)\n   height: 30px; // высота на свое усмотрение     \n   font-size: 13px; // Размер шрифта\n   box-sizing: border-box;\n   padding: 0 10px;\n   margin-top: 20px;\n`\nconst StyledButton = styled.input`\n   background-color: #4997D0;\n   color: #ffffff;\n   width:100%;\n   border: 1px solid #cccccc; //цвет рамки\n   border-radius: 3px; //закругление углов (общее)   \n   outline: none; // удаляет обводку в браузерах хром(желтая) и сафари(синяя)\n   height: 30px; // высота на свое усмотрение     \n   font-size: 13px; // Размер шрифта\n   box-sizing: border-box;\n   margin-top: 20px;\n   &:hover{\n    background-color: #237bba;\n    cursor: pointer;\n  }\n`","import { server } from \"../../API\";\nimport { setPostImg, setPostComents, addPostComent } from \"./actions\";\n\nexport const getPostImg = (image_id) => async (dispatch) => {\n    try {\n        const { status, data } = await server(`/images/${image_id}`);\n        if (status === 200) {\n          dispatch(setPostImg({\n            image_id:image_id,\n            src: data.src\n          }));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n};\n\nexport const getPostComments = (image_id) => async (dispatch) => {\n  try {\n      const { status, data } = await server(`/comments/${image_id}`);\n      if (status === 200) {\n        dispatch(setPostComents(data));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n};\n\nexport const addComment = (comment) => async (dispatch) => {\n  try {\n      const { status, data } = await server.post(`/comments/add/`, comment);\n      if (status === 200) {\n        dispatch(addPostComent(data));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n};\n\n","import { SET_POST_IMG, SET_POST_COMMENTS, ADD_POST_COMMENT } from \"./types\";\n\nexport const setPostImg = (payload) => ({\n    type: SET_POST_IMG,\n    payload\n});\n\nexport const setPostComents = (payload) => ({\n    type: SET_POST_COMMENTS,\n    payload\n});\n\nexport const addPostComent = (payload) => ({\n    type: ADD_POST_COMMENT,\n    payload\n});","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { selectPost } from '../../store/post/selectors';\nimport { PostForm } from './PostForm';\n\nexport const Post = () => {\n    const postInfo = useSelector(selectPost)\n    return (\n        <Container>\n            <StyledImg src={postInfo.imgSrc} alt='post NOT FOUND'></StyledImg>\n            <Comments>\n                {postInfo.comments.length > 0 && postInfo.comments.map((item, index) =>\n                    <Comment key={index}>\n                        <CommentName>{item.name}:</CommentName>\n                        <CommentDescription>{item.description}</CommentDescription>\n                    </Comment>\n                )}\n            </Comments>\n            <PostForm image_id={postInfo.image_id} />\n        </Container>\n    )\n}\n\nconst Container = styled.div` \n  display: flex;  \n  flex-direction: column;\n\n  @media (min-width: 481px){  \n    display:grid;      \n    grid-template-areas: \"img comments\"  \n                       \"form comments\";\n    grid-template-columns: 60% 40%;\n    grid-gap: 0 10px;                     \n    padding:30px;\n  } \n  `\nconst StyledImg = styled.img`\nwidth:100%;\n  grid-area: img;\n  object-fit: cover;\n\n`\nconst Comments = styled.div`\n  padding: 20px;\n  grid-area: comments;\n  font-size:13px;\n  @media (min-width: 481px){  \n    padding: 0;\n  }\n`\nconst Comment = styled.div`\n  margin-bottom: 20px;\n`\n\nconst CommentName = styled.p`\n  color: #cccccc;\n  margin: 5px 0;\n`\nconst CommentDescription = styled.p` \n  margin:0;\n`","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { openModal } from '../../store/modal/actions';\n\nimport { getPostComments, getPostImg } from '../../store/post/operation';\nimport { selectPostsList } from '../../store/postsList/selectors';\nimport { Post } from '../Post';\n\nexport const PostsList = () => {\n    const list = useSelector(selectPostsList);\n    const dispatch = useDispatch();\n    const handler = (value) => {\n        dispatch(getPostImg(value))\n        .then(() => dispatch(getPostComments(value)))\n        .then(() => dispatch(openModal(<Post/>)))\n        \n    }\n    return(\n        <Container>\n            {list && list.map((item, index) =>\n                <StyledImg key = {index} src={item.src} alt={`foto № ${item.image_id}`} onClick={() => handler(item.image_id)}/>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 30px;   \n    @media (min-width: 481px){        \n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 30px 20px;\n    }\n\n`\nconst StyledImg = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`","export const SET_POSTS = 'SET_POSTS';","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { Footer } from \"./commons/Footer\";\nimport { Header } from \"./commons/Header\";\nimport { Modal } from './components/Modal';\nimport { PostsList } from './components/PostsList';\nimport { selectModalIsOpen } from './store/modal/selectors';\nimport { getPosts } from './store/postsList/operation';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isOpenModal = useSelector(selectModalIsOpen)\n\n  useEffect(() => {\n    dispatch(getPosts())    \n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Header/>\n      <PostsList/>\n      <Footer/>\n      {isOpenModal && <Modal/>}\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n min-height: 80vh;\n max-width:90%;\n margin: 0 auto;\n overflow: hidden;\n display: block;\n position: relative;\n padding-bottom: 200px;\n `","import { server } from \"../../API\";\nimport { setPosts } from \"./actions\";\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const { status, data } = await server('/images/');\n        if (status === 200) {\n          dispatch(setPosts(data));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n};","import { SET_POSTS } from \"./types\";\n\nexport const setPosts = (payload) => ({\n    type: SET_POSTS,\n    payload\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CLOSE_MODAL, OPEN_MODAL } from './types';\r\n\r\nconst initialState = {\r\n  isOpenModal: false,\r\n  content: {},\r\n}\r\n\r\nexport function reducer (state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        content: payload,\r\n        isOpenModal: true\r\n\r\n      }\r\n    case CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpenModal: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_POSTS } from \"./types\";\n\nconst InitialState = {\n    posts: [],\n};\n\nexport function reducer ( state = InitialState, {type, payload}) {\n    switch  (type) {\n        case SET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n            }\n        default:\n            return state\n    }\n};\n\n\n","import { SET_POST_COMMENTS, SET_POST_IMG, ADD_POST_COMMENT } from \"./types\";\n\nconst InitialState = {\n    imgSrc: '',\n    comments: []\n};\n\nexport function reducer(state = InitialState, { type, payload }) {\n    switch (type) {\n        case SET_POST_IMG:\n            return {\n                ...state,\n                image_id: payload.image_id,\n                imgSrc: payload.src,\n            }\n        case SET_POST_COMMENTS:\n            return {\n                ...state,\n                comments: payload,\n            }\n        case ADD_POST_COMMENT:\n            return {\n                ...state,\n                comments: [...state.comments, payload],\n            }\n        default:\n            return state\n    }\n};\n\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {MODULE_NAME as modalModuleName} from './modal/selectors';\nimport {reducer as modalReducer} from './modal/reducer';\n\nimport {MODULE_NAME as postsListModuleName} from './postsList/selectors';\nimport {reducer as postsListReducer} from './postsList/reducer';\n\nimport {MODULE_NAME as postModuleName} from './post/selectors';\nimport {reducer as postReducer} from './post/reducer';\n\nconst rootReducer = combineReducers({\n    [modalModuleName]: modalReducer,\n    [postsListModuleName]: postsListReducer,\n    [postModuleName]: postReducer,\n})\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}